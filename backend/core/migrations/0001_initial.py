# Generated by Django 5.2.1 on 2025-06-13 19:26

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Question",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=255)),
                (
                    "source",
                    models.CharField(
                        blank=True,
                        help_text="e.g., LeetCode, personal interview",
                        max_length=4095,
                    ),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True, help_text="Detailed description of the question"
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        blank=True,
                        editable=False,
                        help_text="URL-friendly identifier for the question",
                        max_length=255,
                        unique=True,
                    ),
                ),
                (
                    "difficulty",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Easy", "Easy"),
                            ("Medium", "Medium"),
                            ("Hard", "Hard"),
                        ],
                        max_length=6,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Timestamp when the question was created",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Timestamp when the question was last updated",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Indicates if the question is active"
                    ),
                ),
                ("attempts_count", models.PositiveIntegerField(default=0)),
                (
                    "solved_count",
                    models.PositiveIntegerField(
                        default=0,
                        help_text="Number of times this question has been solved",
                    ),
                ),
                (
                    "last_attempted_at",
                    models.DateTimeField(
                        blank=True, help_text="Timestamp of the last attempt", null=True
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="questions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at", "title"],
            },
        ),
        migrations.CreateModel(
            name="QuestionLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_attempted", models.DateTimeField(blank=True, null=True)),
                (
                    "time_spent_min",
                    models.PositiveIntegerField(
                        blank=True, help_text="Time spent in minutes", null=True
                    ),
                ),
                (
                    "outcome",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("Solved", "Solved"),
                            ("Partial", "Partial"),
                            ("Failed", "Failed"),
                        ],
                        max_length=40,
                    ),
                ),
                (
                    "solution_approach",
                    models.CharField(
                        blank=True,
                        help_text="e.g., Brute force, Optimized",
                        max_length=100,
                    ),
                ),
                ("self_notes", models.TextField(blank=True)),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="logs",
                        to="core.question",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="question_logs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Question Log",
                "verbose_name_plural": "Question Logs",
                "ordering": ["-date_attempted"],
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50, unique=True)),
                (
                    "description",
                    models.TextField(
                        blank=True, help_text="Detailed description of the tag"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Timestamp when the tag was created",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Timestamp when the tag was last updated",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True, help_text="Indicates if the tag is active"
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tags",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.AddField(
            model_name="question",
            name="tags",
            field=models.ManyToManyField(
                blank=True,
                help_text="Tags for the question",
                related_name="questions",
                to="core.tag",
            ),
        ),
    ]
