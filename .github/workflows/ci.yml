name: CI

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # TODO: needed?
      # - name: Install additional system dependencies
      #   run: |
      #     sudo apt-get update
      #     sudo apt-get install -y libpq-dev libffi-dev libssl-dev build-essential

      - name: Install Python dependencies
        run: |
          # Reasons we need requirements-dev.txt:
          # - Need to get werkzeug for runssl.sh
          # - Need to get pytest
          pip install -r requirements.txt -r requirements-dev.txt

      - name: Set up environment variables
        run: |
          echo DJANGO_SECRET_KEY=$(python -c 'import secrets; print(secrets.token_urlsafe(32))') >> $GITHUB_ENV
          echo DJANGO_DEBUG=True >> $GITHUB_ENV
          echo RDS_PASSWORD=topbottom1 >> $GITHUB_ENV
          echo RDS_HOSTNAME=localhost >> $GITHUB_ENV
          echo RDS_DB_NAME=interview_q_1 >> $GITHUB_ENV
          echo FRONTEND_ORIGINS=http://127.0.0.1:5173,https://127.0.0.1:5173 >> $GITHUB_ENV
          echo BACKEND_ORIGINS=http://127.0.0.1:8000,https://127.0.0.1:8000 >> $GITHUB_ENV

      - name: Create database & apply migrations
        run: |
          pwd
          ls -la .
          mkdir -p backend/db/
          python manage.py migrate
          ls -la backend/db/db.sqlite3

      # TODO: Add a step to collect static files if needed

      - name: Start backend server for integration tests
        run: ./runssl.sh &

      - name: Run backend tests
        run: |
          pytest --cov=backend --cov-report=html
      - name: Upload coverage
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: htmlcov/


      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm ci

      - name: Run frontend tests
        working-directory: frontend
        run: npm test
